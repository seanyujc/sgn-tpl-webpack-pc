/**
 * @license angular-iscroll v3.5.1, 2017-08-02T10:56:05+0800
 * (c) 2017 Martin Thorsen Ranang <mtr@ranang.org>
 * License: MIT
 */
!function(e,r){"function"==typeof define&&define.amd?define(["iscroll/build/iscroll-probe","platform"],r):"object"==typeof exports?module.exports=r(require("iscroll/build/iscroll-probe"),require("platform")):e.angularIscroll=r(e.IScroll,e.platform)}(this,function(e,r){"use strict";/**
     * Compares two software version numbers (e.g. "1.7.1" or "1.2b").
     *
     * This function was born in http://stackoverflow.com/a/6832721.
     *
     * @param {string} v1 The first version to be compared.
     * @param {string} v2 The second version to be compared.
     * @param {object} [options] Optional flags that affect comparison behavior:
     * <ul>
     *     <li>
     *         <tt>lexicographical: true</tt> compares each part of the version strings lexicographically instead of
     *         naturally; this allows suffixes such as "b" or "dev" but will cause "1.10" to be considered smaller than
     *         "1.2".
     *     </li>
     *     <li>
     *         <tt>zeroExtend: true</tt> changes the result if one version string has less parts than the other. In
     *         this case the shorter string will be padded with "zero" parts instead of being considered smaller.
     *     </li>
     * </ul>
     * @returns {number|NaN}
     * <ul>
     *    <li>0 if the versions are equal</li>
     *    <li>a negative integer iff v1 < v2</li>
     *    <li>a positive integer iff v1 > v2</li>
     *    <li>NaN if either version string is in the wrong format</li>
     * </ul>
     *
     * @copyright by Jon Papaioannou (["john", "papaioannou"].join(".") + "@gmail.com")
     * @license This function is in the public domain. Do what you want with it, no strings attached.
     */
function n(e,r,n){function l(e){return(i?/^\d+[A-Za-z]*$/:/^\d+$/).test(e)}var i=n&&n.lexicographical,o=n&&n.zeroExtend,t=e.split("."),a=r.split(".");if(!t.every(l)||!a.every(l))return NaN;if(o){for(;t.length<a.length;)t.push("0");for(;a.length<t.length;)a.push("0")}i||(t=t.map(Number),a=a.map(Number));for(var c=0;c<t.length;++c){if(a.length==c)return 1;if(t[c]!=a[c])return t[c]>a[c]?1:-1}return t.length!=a.length?-1:0}function l(e){return"Chrome Mobile"===e.name}function i(e){return"Android Browser"===e.name&&n(e.os.version,"4.0.4")>=0}function o(e){return e.substring(0,1).toLocaleUpperCase()+e.substring(1)}function t(e){e()}function a(r,n,l,i,o){function a(e,r){n(function(){e.refresh()},r.directive.asyncRefreshDelay,r.directive.invokeApply)}function c(n,o,c,u){function d(){null!==S&&l.cancel(S),angular.isDefined(n.iscrollInstance)&&delete n.iscrollInstance,h.destroy(),o.removeClass(s.on).addClass(s.off),o.children(".iscroll-scroller").attr("style",null),angular.forEach(p,t)}function v(){g&&(g=!1,a(h,u),g=!0)}var h=new e(o[0],u.iScroll),g=!0,S=null;angular.forEach(f,function(e,r){angular.isDefined(u.directive[r])&&h.on(e,u.directive[r])}),o.removeClass(s.off).addClass(s.on),angular.isDefined(c.iscrollInstance)&&(n.iscrollInstance=h),!1!==u.directive.asyncRefreshDelay&&a(h,u),h.on("scrollStart",function(){g=!1}),h.on("scrollEnd",function(){g=!0}),!1!==u.directive.refreshInterval&&(S=l(v,u.directive.refreshInterval,0,u.directive.invokeApply));var p=[r.$on(i.disabled,d),r.$on(i.refresh,v),n.$on("$destroy",d)];return h}return{restrict:"A",link:function(e,n,l){function a(){n.hasClass(s.on)||c(e,n,l,u)}var u={iScroll:angular.extend({},e.iscroll||{},o.defaults.iScroll),directive:angular.extend({},o.defaults.directive)};angular.forEach(u.iScroll,function(e,r){(o.defaults.directive.hasOwnProperty(r)||f.hasOwnProperty(r))&&(u.directive[r]=e,delete u.iScroll[r])});var d=[r.$on(i.enabled,a)];o.state.useIScroll?a():n.removeClass(s.on).addClass(s.off),e.$on("$destroy",function(){angular.forEach(d,t)})},scope:{iscroll:"=",iscrollInstance:"="}}}a.$inject=["$rootScope","$timeout","$interval","iScrollSignals","iScrollService"];var c={disabled:"iscroll:disabled",enabled:"iscroll:enabled",refresh:"iscroll:refresh"},s={on:"iscroll-on",off:"iscroll-off"},u=["beforeScrollStart","scrollCancel","scrollStart","scroll","scrollEnd","flick","zoomStart","zoomEnd"],f={},d=angular.isDefined(r)&&function(e){if("Opera Mini"===e.name)return!1;if("IE Mobile"===e.name)return n(e.version,"11.0")>=0;switch(e.os.family){case"Android":return l(e)||i(e);case"iOS":return n(e.version,"5.1")>=0;default:return!0}}(r);return angular.forEach(u,function(e){this["on"+o(e)]=e},f),angular.module("angular-iscroll",[]).directive("iscroll",a).provider("iScrollService",function(){function e(e,i){function o(r){r||(a.useIScroll=!1),e.$emit(i.disabled)}function t(r){r||(a.useIScroll=!0),e.$emit(i.enabled)}var a={useIScroll:l.directive.initiallyEnabled,autoDetectedUseNativeScroll:d};return{defaults:l,state:a,versionCompare:n,platform:r,enable:t,disable:o,toggle:function(e){a.useIScroll^e?o(e):t(e)},refresh:function(r){e.$emit(i.refresh,r)}}}e.$inject=["$rootScope","iScrollSignals"];var l={iScroll:{momentum:!0,mouseWheel:!0},directive:{initiallyEnabled:!d,asyncRefreshDelay:0,refreshInterval:!1,invokeApply:!1}};angular.forEach(f,function(e,r){this[r]=void 0},l.directive),this.useNativeScroll=d,this.platform=r,this.configureDefaults=function(e){angular.isDefined(e.directive)&&angular.extend(l.directive,e.directive),angular.isDefined(e.iScroll)&&angular.extend(l.iScroll,e.iScroll)},this.getDefaults=function(){return l},this.$get=e}).constant("iScrollSignals",c)});